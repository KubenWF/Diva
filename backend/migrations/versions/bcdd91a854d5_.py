"""empty message

Revision ID: bcdd91a854d5
Revises: 
Create Date: 2024-11-18 19:48:34.202607

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'bcdd91a854d5'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('albums',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=120), nullable=False),
    sa.Column('release_date', sa.Date(), nullable=True),
    sa.Column('cover_art', sa.String(length=255), nullable=False),
    sa.Column('ranking', sa.Integer(), nullable=True),
    sa.Column('descriptors', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('albums', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_albums_name'), ['name'], unique=False)

    op.create_table('lists',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=120), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('created_at', sa.Date(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('lists', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_lists_name'), ['name'], unique=False)

    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('first_name', sa.String(length=80), nullable=False),
    sa.Column('last_name', sa.String(length=80), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('birth_day', sa.Integer(), nullable=False),
    sa.Column('birth_month', sa.Integer(), nullable=False),
    sa.Column('birth_year', sa.Integer(), nullable=False),
    sa.Column('bio', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('favorite_albums',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('album_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['album_id'], ['albums.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'album_id')
    )
    op.create_table('list_albums',
    sa.Column('list_id', sa.Integer(), nullable=False),
    sa.Column('album_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['album_id'], ['albums.id'], ),
    sa.ForeignKeyConstraint(['list_id'], ['lists.id'], ),
    sa.PrimaryKeyConstraint('list_id', 'album_id')
    )
    op.create_table('owner_users_lists',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('list_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['list_id'], ['lists.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'list_id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('owner_users_lists')
    op.drop_table('list_albums')
    op.drop_table('favorite_albums')
    op.drop_table('users')
    with op.batch_alter_table('lists', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_lists_name'))

    op.drop_table('lists')
    with op.batch_alter_table('albums', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_albums_name'))

    op.drop_table('albums')
    # ### end Alembic commands ###
